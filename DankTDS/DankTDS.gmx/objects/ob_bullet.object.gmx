<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sp_bullet_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>homing = false;

if global.homing = true {
    alarm[0]=(8/(speed+1))*(speed+1)
}

hits = 0;

temp_x = x;
temp_y = y;
collision = (position_meeting(temp_x,temp_y,ob_enemy) || position_meeting(temp_x,temp_y,ob_wall));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>homing = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if homing = true &amp;&amp; instance_number(ob_enemy) &gt; 0 {
    var i;
    i = instance_nearest(x,y,ob_enemy);
    turnthrust(i,32,2,8);
}

if homing = true &amp;&amp; instance_number(ob_enemy) = 0 {
    i = instance_nearest(x,y,ob_player);
    turnthrust(i,32,2,8);
}

if hits &gt;= ob_player.gun_stat[ob_player.current_gun,10] {
    instance_destroy();
}

collision = (position_meeting(temp_x,temp_y,ob_enemy) || position_meeting(temp_x,temp_y,ob_wall));

while (!collision &amp;&amp; hits &lt; ob_player.gun_stat[ob_player.current_gun,10]) {
    temp_x += lengthdir_x(4,direction);
    temp_y += lengthdir_y(4,direction);
    collision = (position_meeting(temp_x,temp_y,ob_enemy) || position_meeting(temp_x,temp_y,ob_wall));
}

if instance_exists(ob_enemy) {
    var inst;
    inst = collision_line(x,y,x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),ob_enemy,1,1)
    if inst &gt; 0 {
        move_contact_all(direction,speed)
        inst.c_health -= ob_player.gun_stat[ob_player.current_gun,4];
        with(inst) {
            x += lengthdir_x(ob_player.gun_stat[ob_player.current_gun,0]/10,direction-180);
            y += lengthdir_y(ob_player.gun_stat[ob_player.current_gun,0]/10,direction-180);
        }
        repeat(4) {
            i = instance_create(x,y,ob_particle);
            i.image_blend = inst.image_blend;
            i.speed = random(ob_player.gun_stat[ob_player.current_gun,0]/10)+(ob_player.gun_stat[ob_player.current_gun,0]/10);
            i.direction = inst.direction-135-random(90);
            i.image_alpha = 0.5+random(0.5);
            i.image_angle = random(360);
            i.image_index = random(i.image_number);
            i.image_speed = 0;
            i.image_xscale = 0.8 + ob_player.gun_stat[ob_player.current_gun,0]/100;
            i.image_yscale = 0.8 + ob_player.gun_stat[ob_player.current_gun,0]/100;
        }
        hits += 1;
        global.money += ((10/ob_player.gun_stat[ob_player.current_gun,2]) * global.double_points)
        sc_money_gain_lost('+'+string(((10/ob_player.gun_stat[ob_player.current_gun,2]) * global.double_points)),make_color_rgb(251,201,61),x,y,room_speed/2);
    }
}

var inst;
inst = collision_line(x,y,x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),ob_wall,1,1)
if inst &gt; 0 {
    move_contact_solid(direction,speed)
    repeat (8) {
        i = instance_create(x,y,ob_particle);
        i.image_blend = c_white;
        i.speed = random(ob_player.gun_stat[ob_player.current_gun,0]/10)+(ob_player.gun_stat[ob_player.current_gun,0]/10);
        i.direction = direction+random_range(-180,180);
        i.image_alpha = 0.5+random(0.5);
        i.image_angle = random(360);
        i.image_index = random(i.image_number);
        i.image_speed = 0;
        i.image_xscale = 0.8 + ob_player.gun_stat[ob_player.current_gun,0]/100;
        i.image_yscale = 0.8 + ob_player.gun_stat[ob_player.current_gun,0]/100;
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale+random(0.5)-random(0.5),direction,image_blend,1);
draw_set_blend_mode(bm_add);
if global.double_points = 1 {
    draw_line_width_color(x-lengthdir_x(speed,direction),y-lengthdir_y(speed,direction),temp_x,temp_y,random(ob_player.gun_stat[ob_player.current_gun,12])+2,c_dkgray,c_white);
}
if global.double_points = 2 {
    draw_line_width_color(x-lengthdir_x(speed,direction),y-lengthdir_y(speed,direction),temp_x,temp_y,random(ob_player.gun_stat[ob_player.current_gun,12])+2,c_gray,c_yellow);
}
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
