<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.money = 10000.00;
global.g_souls=0;
global.b_souls=0;
global.r_souls=0;
global.y_souls=0;
global.viewshake = 0;
global.double_points = 1;
global.money_gain = 0;

pickup_time = room_speed/2;
g_pickup = 0;
b_pickup = 0;
r_pickup = 0;
y_pickup = 0;
g_draw_inc = 0;
b_draw_inc = 0;
r_draw_inc = 0;
y_draw_inc = 0;
g_draw_max = 0;
b_draw_max = 0;
r_draw_max = 0;
y_draw_max = 0;

// these control the flashing of the circle

i_dir = 1; // the direction, 1 = going up, -1 = going down
i_max = 1.25; // the maximum value it reaches in either direction
i = i_max; // the value of the growing/shrinking
i_inc = 0.1; // how much i increases/decreases each step
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y_pickup = 0;
y_draw_inc = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>r_pickup = 0;
r_draw_inc = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>b_pickup = 0;
b_draw_inc = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>g_pickup = 0;
g_draw_inc = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vw = view_wview[0];
vh = view_hview[0];

red = make_color_rgb(251,79,79);
ylw = make_color_rgb(251,201,61);
grn = make_color_rgb(108,229,145);
blu = make_color_rgb(108,192,229);

draw_set_color(c_white);
draw_set_font(ft_12);
draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_set_alpha(1)

var bgcolor;
bgcolor = make_color_rgb(45,52,58);

draw_rectangle_color(1,vh-78,vw,vh,bgcolor,bgcolor,bgcolor,bgcolor,false);

// DRAW HEALTH AND MANA BAR

//draw_rectangle_color(152,vh-32,152+round(string_width(string(ob_player.clip_ammo)+' / '+string(ob_player.total_ammo))/10)*10+10,vh,c_black,c_black,c_black,c_black,false)
draw_set_alpha(1)
draw_sprite_ext(sp_health_bar,0,(vw/2)-15,vh-78-8,(1/ob_player.max_health)*ob_player.current_health,1,0,c_white,1)
// draw_text_ext_color(10,8,string(ob_player.hp),-1,-1,c_white,c_white,c_white,c_white,1)
draw_sprite_ext(sp_special_bar,0,(vw/2)+15,vh-78-8,(1/ob_player.total_mana)*ob_player.current_mana,1,0,c_white,1)
// draw_text_ext_color(10,32,string(ob_player.ammo),-1,-1,c_white,c_white,c_white,c_white,1)

// DRAW AMMO / RELOAD BAR / WEAPON NAME

draw_set_font(ft_14)
// draw_sprite(sp_ammo,0,8,vh-80+56)
//if ob_player.reloading = true {
//    draw_sprite_ext(sp_ammo_bar,0,vw-163,vh-10,1-(1/(30*ob_player.gun_stat[ob_player.current_gun,1]))*ob_player.alarm[1],1,0,c_white,0.6)
//}
//draw_sprite_ext(sp_ammo_bar,0,vw-163,vh-10,(1/ob_player.gun_stat[ob_player.current_gun,6])*ob_player.clip_ammo,1,0,c_white,1)
draw_set_font(ft_34);
draw_set_valign(fa_bottom);
draw_set_halign(fa_right);
draw_text_ext_color(vw-13,vh-4,' / '+string(ob_player.total_ammo),-1,-1,c_white,c_white,c_white,c_white,1)
if ob_player.total_ammo &gt; 99 {
    draw_set_font(ft_56);
    draw_text_ext_color(vw-90,vh+2,string(ob_player.clip_ammo),-1,-1,c_white,c_white,c_white,c_white,1);
    // draw_set_font(ft_24);
    // draw_text(vw-140,vh-6,ob_player.gun_stat[ob_player.current_gun,8]);
} else {
    draw_set_font(ft_56);
    draw_text_ext_color(vw-74,vh+2,string(ob_player.clip_ammo),-1,-1,c_white,c_white,c_white,c_white,1)
    // draw_set_font(ft_24);
    // draw_text(vw-120,vh-6,ob_player.gun_stat[ob_player.current_gun,8]);
}

// DRAW MONEY, ROUND NUMBER AND ENEMIES LEFT
draw_set_font(ft_56);
draw_set_valign(fa_bottom);
draw_set_halign(fa_left);
draw_text_ext_color(40,vh+2,string(global.money),-1,-1,c_white,c_white,c_white,c_white,1)
draw_text(13,vh+2,'$')
if global.double_points = 2 {
    if i_dir = 1 {
        if i &lt; i_max {
            i += i_inc
        } else {
            i_dir = -1
        }
    }

    if i_dir = -1 {
        if i &gt; -i_max {
            i -= i_inc
        } else {
            i_dir = 1
        }
    }
    draw_text_ext_color(40,vh+2,string(global.money),-1,-1,c_yellow,c_yellow,c_yellow,c_yellow,i)
    draw_text_transformed_color(13,vh+2,'$',1,1,image_angle,c_yellow,c_yellow,c_yellow,c_yellow,i)
}

draw_set_font(ft_18);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text_ext_color((vw/2),vh-78+14,'Round: '+string(global.round_number),-1,-1,c_white,c_white,c_white,c_white,1);
draw_set_font(ft_14);
draw_text_ext_color((vw/2),vh-78+44,'Enemies Remaining: '+string(instance_number(ob_enemy)),-1,-1,c_white,c_white,c_white,c_white,1);

// DRAW CURSOR

cursor_sprite = sp_cursor;

// DRAW ABILITY KEYS

// draw_sprite_ext(sp_ability1,0,32,(vh/2)-54,0.5,0.5,0,c_white,1)
// draw_text(64,(vh/2)-50,'Q')
// draw_sprite_ext(sp_ability2,0,32,(vh/2),0.5,0.5,0,c_white,1)
// draw_text(64,(vh/2)+4,'E')
// draw_sprite_ext(sp_ability3,0,32,(vh/2)+54,0.5,0.5,0,c_white,1)
// draw_text(64,(vh/2)+58,'F')

// DRAW ORB COUNTERS
draw_set_font(ft_14);
draw_set_halign(fa_right);
draw_set_valign(fa_middle);
barcolor = make_color_rgb(55,62,68);

draw_rectangle_color(vw-56,(vh/2)-4-64-8-32-16,vw+1,(vh/2)-4-64-8-32+16,barcolor,barcolor,barcolor,barcolor,false);
draw_text_ext_color(vw-8,(vh/2)-3-64-8-32,string(global.r_souls),-1,-1,c_white,c_white,c_white,c_white,1);

if r_pickup = 1 {
    if r_draw_max = 1 {
        r_draw_inc += 1/8;
        if r_draw_inc &gt;= r_draw_max {
            r_draw_max = 0;
        }
    }
    if r_draw_max = 0 {
        r_draw_inc -= 1/7;
        if r_draw_inc &lt;= r_draw_max {
            r_draw_max = 1;
        }
    }
    draw_set_alpha(r_draw_inc-(r_draw_inc/2));
    draw_rectangle_color(vw-56,(vh/2)-4-64-8-32-16,vw+1,(vh/2)-4-64-8-32+16,c_white,c_white,c_white,c_white,false);
    draw_text_ext_transformed_color(vw-8,(vh/2)-3-64-8-32,string(global.r_souls),-1,-1,1,1,image_angle,red,red,red,red,r_draw_inc);
    draw_set_alpha(1);
}

draw_sprite_ext(sp_orb_red,0,vw-56,(vh/2)-4-64-8-32,1,1,image_angle,image_blend,1);

draw_rectangle_color(vw-56,(vh/2)-4-32-16,vw+1,(vh/2)-4-32+16,barcolor,barcolor,barcolor,barcolor,false);
draw_text_ext_color(vw-8,(vh/2)-3-32,string(global.b_souls),-1,-1,c_white,c_white,c_white,c_white,1);

if b_pickup = 1 {
    if b_draw_max = 1 {
        b_draw_inc += 1/8;
        if b_draw_inc &gt;= b_draw_max {
            b_draw_max = 0;
        }
    }
    if b_draw_max = 0 {
        b_draw_inc -= 1/7;
        if b_draw_inc &lt;= b_draw_max {
            b_draw_max = 1;
        }
    }
    draw_set_alpha(b_draw_inc-(b_draw_inc/2));
    draw_rectangle_color(vw-56,(vh/2)-4-32-16,vw+1,(vh/2)-4-32+16,c_white,c_white,c_white,c_white,false);
    draw_text_ext_transformed_color(vw-8,(vh/2)-3-32,string(global.b_souls),-1,-1,1,1,image_angle,blu,blu,blu,blu,b_draw_inc);
    draw_set_alpha(1);
}

draw_sprite_ext(sp_orb_blue,0,vw-56,(vh/2)-4-32,1,1,image_angle,image_blend,1);

draw_rectangle_color(vw-56,(vh/2)+4+32-16,vw+1,(vh/2)+4+32+16,barcolor,barcolor,barcolor,barcolor,false);
draw_text_ext_color(vw-8,(vh/2)+5+32,string(global.y_souls),-1,-1,c_white,c_white,c_white,c_white,1);

if y_pickup = 1 {
    if y_draw_max = 1 {
        y_draw_inc += 1/8;
        if y_draw_inc &gt;= y_draw_max {
            y_draw_max = 0;
        }
    }
    if y_draw_max = 0 {
        y_draw_inc -= 1/7;
        if y_draw_inc &lt;= y_draw_max {
            y_draw_max = 1;
        }
    }
    draw_set_alpha(y_draw_inc-(y_draw_inc/2));
    draw_rectangle_color(vw-56,(vh/2)+4+32-16,vw+1,(vh/2)+4+32+16,c_white,c_white,c_white,c_white,false);
    draw_text_ext_transformed_color(vw-8,(vh/2)+5+32,string(global.y_souls),-1,-1,1,1,image_angle,ylw,ylw,ylw,ylw,y_draw_inc);
    draw_set_alpha(1);
}

draw_sprite_ext(sp_orb_yellow,0,vw-56,(vh/2)+4+32,1,1,image_angle,image_blend,1);

draw_rectangle_color(vw-56,(vh/2)+4+64+8+32-16,vw+1,(vh/2)+4+64+8+32+16,barcolor,barcolor,barcolor,barcolor,false);
draw_text_ext_color(vw-8,(vh/2)+5+64+8+32,string(global.g_souls),-1,-1,c_white,c_white,c_white,c_white,1);

if g_pickup = 1 {
    if g_draw_max = 1 {
        g_draw_inc += 1/8;
        if g_draw_inc &gt;= g_draw_max {
            g_draw_max = 0;
        }
    }
    if g_draw_max = 0 {
        g_draw_inc -= 1/7;
        if g_draw_inc &lt;= g_draw_max {
            g_draw_max = 1;
        }
    }
    draw_set_alpha(g_draw_inc-(g_draw_inc/2));
    draw_rectangle_color(vw-56,(vh/2)+4+64+8+32-16,vw+1,(vh/2)+4+64+8+32+16,c_white,c_white,c_white,c_white,false);
    draw_text_ext_transformed_color(vw-8,(vh/2)+5+64+8+32,string(global.g_souls),-1,-1,1,1,image_angle,grn,grn,grn,grn,g_draw_inc);
    draw_set_alpha(1);
}

draw_sprite_ext(sp_orb_green,0,vw-56,(vh/2)+4+64+8+32,1,1,image_angle,image_blend,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.in_menu = false {
     game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
