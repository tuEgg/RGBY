<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xmove = 0;
ymove = 0;
xdir = 0;
ydir = 0;
spd = 8;
can_reload = true;
reloading = false;

current_mana = 100;
total_mana = 100;
max_mana = 300;

special[0,0] = 'DASH';
special[0,1] = 0; // start level
special[0,2] = 4; // max level
special[0,3] = 20; // manacost
special[0,4] = 6; // cooldown
special[0,5] = false; // on cooldown

special[1,0] = 'SENTRY';
special[1,1] = 0; // start level
special[1,2] = 4; // max level
special[1,3] = 20; // manacost
special[1,4] = 20; // cooldown
special[1,5] = false; // on cooldown

special[2,0] = 'ELECTRIC WALL';
special[2,1] = 0; // start level
special[2,2] = 4; // max level
special[2,3] = 20; // manacost
special[2,4] = 35; // cooldown
special[2,5] = false; // on cooldown

dashing = false;
max_health = 100;
current_health = max_health;

global.in_menu = 0;
instance_create(x,y,ob_last_pointer);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;

    gun_stat[0,0] = 45; // bullet speed
    gun_stat[0,1] = 1; // reload time in seconds
    gun_stat[0,2] = 5; // shots per second
    gun_stat[0,3] = 3; // direction variance in degrees
    gun_stat[0,4] = 30; // damage
    gun_stat[0,5] = 180; // max ammo
    gun_stat[0,6] = 30; // max clip size
    gun_stat[0,7] = 100; // price
    gun_stat[0,8] = 'BASIC'; // name
    gun_stat[0,9] = 5; // Screen shake
    gun_stat[0,10] = 2; // Bullet penetration, 1 = 1 enemy.
    gun_stat[0,11] = sd_m4a1; // gun sound
    gun_stat[0,12] = 1; // shot width

    gun_stat[1,0] = 60; // bullet speed
    gun_stat[1,1] = 0.5; // reload time in seconds
    gun_stat[1,2] = 8; // shots per second
    gun_stat[1,3] = 3; // direction variance in degrees
    gun_stat[1,4] = 25; // damage
    gun_stat[1,5] = 182; // max ammo
    gun_stat[1,6] = 32; // max clip size
    gun_stat[1,7] = 550; // price
    gun_stat[1,8] = 'SPEEDY'; // name
    gun_stat[1,9] = 8; // Screen shake
    gun_stat[1,10] = 2; // Bullet penetration, 1 = 1 enemy.
    gun_stat[1,11] = sd_m4a1; // gun sound
    gun_stat[1,12] = 2; // shot width
    
    gun_stat[2,0] = 80; // bullet speed
    gun_stat[2,1] = 0.8; // reload time in seconds
    gun_stat[2,2] = 4; // shots per second
    gun_stat[2,3] = 0; // direction variance in degrees
    gun_stat[2,4] = 60; // damage
    gun_stat[2,5] = 72; // max ammo
    gun_stat[2,6] = 12; // max clip size
    gun_stat[2,7] = 875; // price
    gun_stat[2,8] = 'HANDGUNS'; // name
    gun_stat[2,9] = 17; // Screen shake
    gun_stat[2,10] = 4; // Bullet penetration, 1 = 1 enemy.
    gun_stat[2,11] = sd_m1garand; // gun sound
    gun_stat[2,12] = 4; // shot width
    
    gun_stat[3,0] = 120; // bullet speed
    gun_stat[3,1] = 0.8; // reload time in seconds
    gun_stat[3,2] = 2.5; // shots per second
    gun_stat[3,3] = 15; // direction variance in degrees
    gun_stat[3,4] = 80; // damage
    gun_stat[3,5] = 72; // max ammo
    gun_stat[3,6] = 12; // max clip size
    gun_stat[3,7] = 1200; // price
    gun_stat[3,8] = 'SHOTGUN'; // name
    gun_stat[3,9] = 30; // Screen shake
    gun_stat[3,10] = 12; // Bullet penetration, 1 = 1 enemy.
    gun_stat[3,11] = sd_m1garand; // gun sound
    gun_stat[3,12] = 6; // shot width
    
current_gun = 0;
total_ammo = gun_stat[current_gun,5];
clip_ammo = gun_stat[current_gun,6];
global.homing = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MELEE VARIABLES
can_melee = true;
meleeing = false;

melee[0,0] = 140; // melee damage
melee[0,1] = 'SWIPE' // melee name
melee[0,2] = 1 // melee hits per second
melee[0,3] = 64 // melee range
melee[0,4] = 90 // melee arc
melee[0,5] = 20 // melee knockback

current_melee = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>meleeing = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_melee = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clip_ammo = min(gun_stat[current_gun,6],total_ammo);
total_ammo -= clip_ammo;
reloading = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.in_menu = true {
    exit;
}

if keyboard_check(ord('D'))
    xdir = 1;
    
if keyboard_check(ord('A'))
    xdir = -1;
    
if keyboard_check(ord('W'))
    ydir = -1;
    
if keyboard_check(ord('S'))
    ydir = 1;
    
if !keyboard_check(ord('W')) &amp;&amp; !keyboard_check(ord('S')) {
    ydir = 0;
}

if !keyboard_check(ord('A')) &amp;&amp; !keyboard_check(ord('D')) {
    xdir = 0;
}

xmove = xdir * spd;
ymove = ydir * spd;

if !(place_meeting(x+xmove,y,ob_wall)) &amp;&amp; dashing = false {
    x += xmove;
}

if !(place_meeting(x,y+ymove,ob_wall)) &amp;&amp; dashing = false {
    y += ymove;
}

if dashing = false {
    direction = point_direction(x,y,mouse_x,mouse_y);
}

image_angle = point_direction(x,y,mouse_x,mouse_y);

// Keep player in bounds of room
x = median(0,x,room_width);
y = median(0,y,room_width);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.in_menu = true {
    exit;
}

if clip_ammo &lt; gun_stat[current_gun,6] &amp;&amp; total_ammo &gt; 0 &amp;&amp; reloading = false {
    can_reload = true;
}

if clip_ammo = 0 {
    if total_ammo &gt; 0 {
        if can_reload = true {
            reloading = true;
            alarm[1] = room_speed*gun_stat[current_gun,1];
            total_ammo += clip_ammo;
            clip_ammo = 0;
            can_reload = false;
        }
    } else {
        ob_error_controller.error[0,99] = 1;
    }
}

if total_ammo &gt; 0 {
    ob_error_controller.error[0,99] = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    
    // slowing down if dashing
    if dashing = true &amp;&amp; speed &gt; spd {
        speed -=0.5;
        if speed &gt; spd {
            instance_create(x-(lengthdir_x(-4,direction)),y-(lengthdir_y(-4,direction)),ob_dash_particle);
            instance_create(x,y,ob_dash_particle);
            instance_create(x-(lengthdir_x(4,direction)),y-(lengthdir_y(4,direction)),ob_dash_particle);
            instance_create(x-(lengthdir_x(8,direction)),y-(lengthdir_y(8,direction)),ob_dash_particle);
        }
    }
    
    // ignoring the rest if the game is paused
    if global.in_menu = true {
        exit;
    }
    
    // no longer dashing once slowed
    if speed &lt;= spd {
        dashing = false;
        speed = 0;
    }
    
    // replenish mana in 8 seconds
    if dashing = false &amp;&amp; current_mana &lt; total_mana {
        current_mana += total_mana/(room_speed*8);
    }
    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.in_menu = true {
    exit;
}

if current_health &lt;= 0 {
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.in_menu = true {
    exit;
}
current_health -= 1;
can_heal = false;
alarm[3] = room_speed*3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_wall">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.viewshake = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if can_melee = true &amp;&amp; global.in_menu = false {
    meleeing = true
    alarm[2] = room_speed/melee[current_melee,2];
    alarm[3] = room_speed/10;
    can_melee = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if can_shoot = true &amp;&amp; reloading = false &amp;&amp; global.in_menu = false {
    if clip_ammo &gt; 0 {
        if current_gun &lt; 2 {
            i = instance_create(x,y,ob_bullet);
            i.speed = gun_stat[current_gun,0];
            i.direction = point_direction(x,y,mouse_x,mouse_y)+irandom(gun_stat[current_gun,3])-irandom(gun_stat[current_gun,3])+(20*global.homing);
            i.image_angle = image_angle;
        }
        if current_gun = 2 {
            i = instance_create(x+lengthdir_x(6,direction-90),y+lengthdir_y(6,direction-90),ob_bullet);
            i.speed = gun_stat[current_gun,0];
            i.direction = point_direction(x,y,mouse_x,mouse_y)+irandom(gun_stat[current_gun,3])-irandom(gun_stat[current_gun,3])+(20*global.homing);
            i.image_angle = image_angle;
            
            ii = instance_create(x+lengthdir_x(6,direction+90),y+lengthdir_y(6,direction+90),ob_bullet);
            ii.speed = i.speed
            ii.direction = i.direction
            ii.image_angle = image_angle;
        }
        if current_gun = 3 {
            i = instance_create(x,y,ob_bullet);
            i.speed = gun_stat[current_gun,0];
            i.direction = point_direction(x,y,mouse_x,mouse_y)+irandom(gun_stat[current_gun,3])-irandom(gun_stat[current_gun,3])+(20*global.homing);
            i.image_angle = image_angle;
            
            ii = instance_create(x,y,ob_bullet);
            ii.speed = i.speed
            ii.direction = i.direction - random(10)
            ii.image_angle = image_angle;
            
            iii = instance_create(x,y,ob_bullet);
            iii.speed = i.speed
            iii.direction = i.direction - random_range(11,21)
            iii.image_angle = image_angle;
            
            iiii = instance_create(x,y,ob_bullet);
            iiii.speed = i.speed
            iiii.direction = i.direction + random(10)
            iiii.image_angle = image_angle;
            
            iiiii = instance_create(x,y,ob_bullet);
            iiiii.speed = i.speed
            iiiii.direction = i.direction + random_range(11,21)
            iiiii.image_angle = image_angle;
        }
        x += lengthdir_x(ob_player.gun_stat[ob_player.current_gun,0]/20,direction-180);
        y += lengthdir_y(ob_player.gun_stat[ob_player.current_gun,0]/20,direction-180);
        global.viewshake = random(ob_player.gun_stat[ob_player.current_gun,9]);
        sound_play(ob_player.gun_stat[ob_player.current_gun,11]);
        can_shoot = false;
        alarm[0] = room_speed/gun_stat[current_gun,2];
        clip_ammo -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if can_reload = true &amp;&amp; total_ammo &gt; 0 &amp;&amp; global.in_menu = false  {
    reloading = true;
    alarm[1] = room_speed*gun_stat[current_gun,1];
    total_ammo += clip_ammo;
    clip_ammo = 0;
    can_reload = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if dashing = false &amp;&amp; global.in_menu = false {
        if current_mana &gt;= special[0,3] {
            if special[0,5] = false {
                speed = 22;
                current_mana -= special[0,3];
                dashing = true;
                special[0,5] = true;
                instance_create(-100,-100,ob_cooldownQ);
                ob_cooldownQ.alarm[0] = room_speed*special[0,4];
                ob_cooldownQ.image_speed = 12/special[0,4];
             } else {
                ob_error_controller.error[3,99] = 0; 
             }
        } else {
            ob_error_controller.error[2,99] = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if global.in_menu = false &amp;&amp; instance_number(ob_sentry) = 0 &amp;&amp; place_free(x,y+32) {
        if current_mana &gt;= special[2,3] {
            if special[2,5] = false {
                current_mana -= special[2,3];
                instance_create(x,y+32,ob_sentry);
                special[2,5] = true;
                instance_create(-100,-100,ob_cooldownR);
                ob_cooldownR.alarm[0] = room_speed*special[2,4];
                ob_cooldownR.image_speed = 12/special[2,4];} else {
                    ob_error_controller.error[3,99] = 0; 
                }
            } else {
            ob_error_controller.error[2,99] = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if global.in_menu = false &amp;&amp; instance_number(ob_e1) = 0 {
        if current_mana &gt;= special[1,3] {
            if special[1,5] = false {
                current_mana -= special[2,3];
                e1 = instance_create(x+lengthdir_x(8,direction-45),y+lengthdir_y(8,direction-45),ob_e1);
                e2 = instance_create(x+lengthdir_x(8,direction+45),y+lengthdir_y(8,direction+45),ob_e2);
                e1.speed = 12;
                e2.speed = 12;
                e1.direction = direction-45;
                e2.direction = direction+45;
                special[1,5] = true;
                instance_create(-100,-100,ob_cooldownE);
                ob_cooldownE.alarm[0] = room_speed*special[1,4];
                ob_cooldownE.image_speed = 12/special[1,4];
                } else {
                    ob_error_controller.error[3,99] = 0; 
                }
            } else {
            ob_error_controller.error[2,99] = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
