<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;
alarm[1] = room_speed*15;
image_blend = make_color_rgb(108,192,229);
image_xscale = 0.8;
image_yscale = 0.8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
repeat(8) {
    i = instance_create(x,y,ob_particle);
    i.image_blend = image_blend;
    i.speed = random(8)+4;
    i.direction = random(360);
    i.image_alpha = 0.8+random(0.2);
    i.image_angle = random(360);
    i.image_index = random(image_number);
    i.image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ob_enemy) {
    var n;
    n = instance_nearest(x,y,ob_enemy);
    image_angle = point_direction(x,y,n.x,n.y);
    if can_shoot = true &amp;&amp; global.in_menu = false &amp;&amp; collision_line(x,y,n.x,n.y,ob_wall,true,true) &lt; 0 {
        if ob_player.current_gun &lt; 2 {
            i = instance_create(x,y,ob_bullet);
            i.speed = ob_player.gun_stat[ob_player.current_gun,0];
            i.direction = point_direction(x,y,n.x,n.y);
            i.image_angle = image_angle;
        }
        if ob_player.current_gun = 2 {
            i = instance_create(x+lengthdir_x(6,direction-90),y+lengthdir_y(6,direction-90),ob_bullet);
            i.speed = ob_player.gun_stat[ob_player.current_gun,0];
            i.direction = point_direction(x,y,n.x,n.y);
            i.image_angle = image_angle;
            
            ii = instance_create(x+lengthdir_x(6,direction+90),y+lengthdir_y(6,direction+90),ob_bullet);
            ii.speed = i.speed
            ii.direction = i.direction
            ii.image_angle = image_angle;
        }
        if ob_player.current_gun = 3 {
            i = instance_create(x,y,ob_bullet);
            i.speed = ob_player.gun_stat[ob_player.current_gun,0];
            i.direction = point_direction(x,y,n.x,n.y);
            i.image_angle = image_angle;
            
            ii = instance_create(x,y,ob_bullet);
            ii.speed = i.speed
            ii.direction = i.direction - random(10)
            ii.image_angle = image_angle;
            
            iii = instance_create(x,y,ob_bullet);
            iii.speed = i.speed
            iii.direction = i.direction - random_range(11,21)
            iii.image_angle = image_angle;
            
            iiii = instance_create(x,y,ob_bullet);
            iiii.speed = i.speed
            iiii.direction = i.direction + random(10)
            iiii.image_angle = image_angle;
            
            iiiii = instance_create(x,y,ob_bullet);
            iiiii.speed = i.speed
            iiiii.direction = i.direction + random_range(11,21)
            iiiii.image_angle = image_angle;
        }
        sound_play(ob_player.gun_stat[ob_player.current_gun,11]);
        can_shoot = false;
        alarm[0] = 30/ob_player.gun_stat[ob_player.current_gun,2];
    }
} else {
    image_angle = point_direction(x,y,ob_player.x,ob_player.y);
}

if distance_to_object(ob_player) &gt; 64 &amp;&amp; global.in_menu = false {
    mp_potential_step_object(ob_player.x,ob_player.y,ob_player.spd*0.75,ob_wall);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
