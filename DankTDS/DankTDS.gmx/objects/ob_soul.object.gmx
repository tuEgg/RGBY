<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_soul</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>col[0,0] = make_color_rgb(251,79,79);
col[0,1] = 'red'
col[1,0] = make_color_rgb(251,201,61);
col[1,1] = 'yellow'
col[2,0] = make_color_rgb(108,229,145);
col[2,1] = 'green'
col[3,0] = make_color_rgb(108,192,229);
col[3,1] = 'blue'

color = irandom(3);

image_xscale = 0.25;
image_yscale = 0.25;

image_blend = col[color,0];
soul_color = col[color,1];

spd = 8;

// these control the flashing of the circle

i_dir = 1; // the direction, 1 = going up, -1 = going down
i_max = 1.25; // the maximum value it reaches in either direction
i = i_max; // the value of the growing/shrinking
i_inc = 0.1; // how much i increases/decreases each step

// destroying if alive too long

life = 0;
max_life = room_speed*20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(6) {
            i = instance_create(x,y,ob_particle);
            i.image_blend = image_blend;
            i.speed = random(8);
            i.direction = random(360);
            i.sprite_index = sp_soul;
            i.image_alpha = 0.5+random(0.5);
            i.image_angle = random(360);
            i.image_index = random(i.image_number);
            i.image_speed = 0;
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_object(ob_player) &lt;= 128 {
    spd *= 1.1
    move_towards_point(ob_player.x,ob_player.y,spd)
}

if distance_to_object(ob_player) &lt;= 16 {
    switch (soul_color) {
    case 'green':
        global.g_souls += 1;
        ob_player_controller.alarm[0] = ob_player_controller.pickup_time;
        ob_player_controller.g_pickup = 1;
        break;
    case 'blue':
        global.b_souls += 1;
        ob_player_controller.alarm[1] = ob_player_controller.pickup_time;
        ob_player_controller.b_pickup = 1;
        break;
    case 'red':
        global.r_souls += 1;
        ob_player_controller.alarm[2] = ob_player_controller.pickup_time;
        ob_player_controller.r_pickup = 1;
        break;
    case 'yellow':
        global.y_souls += 1;
        ob_player_controller.alarm[3] = ob_player_controller.pickup_time;
        ob_player_controller.y_pickup = 1;
        break;
    }
    instance_destroy();
}

if i_dir = 1 {
    if i &lt; i_max {
        i += i_inc * life/room_speed/10
    } else {
        i_dir = -1
    }
}

if i_dir = -1 {
    if i &gt; -i_max {
        i -= i_inc * life/room_speed/10
    } else {
        i_dir = 1
    }
}

life += 1;
if life &gt;= max_life {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
draw_sprite_ext(sprite_index,image_index,x,y,i,i,image_angle,image_blend,0.3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
